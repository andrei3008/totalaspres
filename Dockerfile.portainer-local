# Dockerfile pentru deploy in Portainer (local development)
FROM laravelsail/php82-composer:latest

# Install Node.js LTS (v20), Redis extension, and Redis tools
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get update && \
    apt-get install -y nodejs redis-tools && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    pecl install redis && \
    docker-php-ext-enable redis && \
    echo "extension=redis.so" > /usr/local/etc/php/conf.d/redis.ini

# Install global packages
RUN npm install -g npm@latest

# Set working directory
WORKDIR /var/www/html

# Copy all project files
COPY . /var/www/html/

# Create .env from .env.example for local development
RUN cp .env.example .env && \
    sed -i 's/APP_ENV=production/APP_ENV=local/' .env && \
    sed -i 's/APP_DEBUG=false/APP_DEBUG=true/' .env && \
    sed -i 's|APP_URL=.*|APP_URL=http://localhost:8001|' .env && \
    sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=sqlite/' .env && \
    sed -i 's|DB_DATABASE=.*|DB_DATABASE=/var/www/html/database/database.sqlite|' .env && \
    sed -i 's/CACHE_STORE=.*/CACHE_STORE=file/' .env && \
    echo 'REDIS_CLIENT=phpredis' >> .env && \
    echo 'REDIS_HOST=redis' >> .env && \
    echo 'REDIS_PASSWORD=null' >> .env && \
    echo 'REDIS_PORT=6379' >> .env

# Create required directories and set permissions
RUN mkdir -p storage/logs storage/framework/{cache,sessions,views} bootstrap/cache database && \
    chmod -R 755 storage bootstrap/cache && \
    touch database/database.sqlite && \
    chmod 664 database/database.sqlite

# Install dependencies
RUN composer install --optimize-autoloader --no-interaction && \
    npm ci && \
    npm run build

# Setup Laravel (without Redis-dependent commands)
RUN php artisan migrate --force && \
    php artisan config:clear && \
    php artisan route:clear && \
    php artisan view:clear

# Create startup script
RUN echo '#!/bin/bash' > /usr/local/bin/start.sh && \
    echo 'set -e' >> /usr/local/bin/start.sh && \
    echo '' >> /usr/local/bin/start.sh && \
    echo '# Wait for Redis to be ready' >> /usr/local/bin/start.sh && \
    echo 'echo "Waiting for Redis..."' >> /usr/local/bin/start.sh && \
    echo 'while ! redis-cli -h redis ping >/dev/null 2>&1; do' >> /usr/local/bin/start.sh && \
    echo '    sleep 1' >> /usr/local/bin/start.sh && \
    echo 'done' >> /usr/local/bin/start.sh && \
    echo 'echo "Redis is ready!"' >> /usr/local/bin/start.sh && \
    echo '' >> /usr/local/bin/start.sh && \
    echo '# Switch to Redis cache and run Redis-dependent commands' >> /usr/local/bin/start.sh && \
    echo 'sed -i "s/CACHE_STORE=file/CACHE_STORE=redis/" /var/www/html/.env' >> /usr/local/bin/start.sh && \
    echo 'php artisan config:clear' >> /usr/local/bin/start.sh && \
    echo 'php artisan cache:clear' >> /usr/local/bin/start.sh && \
    echo '' >> /usr/local/bin/start.sh && \
    echo '# Start Laravel server' >> /usr/local/bin/start.sh && \
    echo 'php artisan serve --host=0.0.0.0 --port=80' >> /usr/local/bin/start.sh && \
    chmod +x /usr/local/bin/start.sh

# Expose port
EXPOSE 80

# Start command
CMD ["/usr/local/bin/start.sh"]
