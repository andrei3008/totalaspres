services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    ports:
      - "8001:80"
    environment:
      WWWUSER: "${WWWUSER:-1000}"
      WWWGROUP: "${WWWGROUP:-1000}"
      DB_CONNECTION: sqlite
      DB_DATABASE: /var/www/html/database/database.sqlite
    volumes:
      - .:/var/www/html:cached
      - /var/www/html/node_modules
      - /var/www/html/vendor
    depends_on:
      - redis
    networks:
      - sail
    command: >
      sh -c "
        echo 'Starting Laravel application...' &&
        # Check if we're in development mode (volumes mounted) or production mode (code copied)
        if [ -f /var/www/html/composer.json ]; then
          echo 'Code found, proceeding with startup...'
        else
          echo 'Error: Code not found. Check if code is copied into container or volumes are mounted properly.';
          exit 1;
        fi &&
        
        # Only install dependencies if in development mode (when vendor doesn't exist or is mounted)
        if [ ! -d /var/www/html/vendor ] || [ ! -f /var/www/html/vendor/autoload.php ]; then
          echo 'Installing PHP dependencies...' &&
          composer install --no-dev --optimize-autoloader
        else
          echo 'PHP dependencies already installed.'
        fi &&
        
        # Only install node dependencies and build if needed
        if [ ! -d /var/www/html/node_modules ] || [ ! -d /var/www/html/public/build ]; then
          echo 'Installing Node.js dependencies...' &&
          npm ci &&
          echo 'Building assets...' &&
          npm run build
        else
          echo 'Node dependencies and assets already built.'
        fi &&
        
        echo 'Setting up database...' &&
        touch /var/www/html/database/database.sqlite &&
        php artisan migrate --force &&
        echo 'Clearing caches...' &&
        php artisan config:clear &&
        php artisan cache:clear &&
        php artisan route:clear &&
        php artisan view:clear &&
        echo 'Starting web server...' &&
        php artisan serve --host=0.0.0.0 --port=80
      "      
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - sail-redis:/data
    networks:
      - sail

volumes:
  sail-redis:
    driver: local

networks:
  sail:
    driver: bridge
